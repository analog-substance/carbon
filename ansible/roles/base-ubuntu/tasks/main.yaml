---
  - name: Gather all facts of cloud init
    community.general.cloud_init_data_facts:
    register: result

  - name: Wait for cloud init to finish
    community.general.cloud_init_data_facts:
      filter: status
    register: res
    until: "res.cloud_init_data_facts.status.v1.stage is defined and not res.cloud_init_data_facts.status.v1.stage"
    retries: 50
    delay: 5

  - name: install base utils for most things
    become: true
    package:
      name:
        - ansible
        - apt-transport-https
        - autoconf
        - automake
        - build-essential
        - ca-certificates
        - checkinstall
        - curl
        - dnsutils
        - figlet
        - fonts-noto-color-emoji
        - fortune-mod
        - gdb
        - git
        - gnupg-agent
        - hydra
        - ipcalc
        - jq
        - libffi-dev
        - libjpeg8-dev
        - libplist-utils
        - libssl-dev
        - libunbound-dev
        - libxml2-dev
        - libxml2-utils
        - libxslt1-dev
        - make
        - masscan
        - ncat
        - net-tools
        - nmap
        - openjdk-11-jre
        - openvpn
        - prips
        - python-is-python3
        - python3-pip
        - python3-shodan
        - python3-venv
        - rsync
        - silversearcher-ag
        - swaks
        - tmux
        - tree
        - unzip
        - vim
        - wfuzz
        - whois
        - zlib1g-dev
        - zsh
      state: present

  - name: Allow nmap to do things by default so we do not need root
    become: true
    command:
      cmd: setcap cap_net_raw,cap_net_admin,cap_net_bind_service+eip /usr/bin/nmap

  - name: Install Golang
    become: yes
    shell:
      cmd: curl -o go.linux-amd64.tar.gz -Ls https://golang.org/dl/$(curl -s 'https://go.dev/dl/?mode=json' | jq -r '.[0].version').linux-amd64.tar.gz && rm -rf /usr/local/go && tar -C /usr/local -xzf go.linux-amd64.tar.gz && rm go.linux-amd64.tar.gz
      creates: /usr/local/go/bin/go

  - name: Create $HOME/opt
    file:
      path: "{{ ansible_env.HOME }}/opt"
      state: directory

  - name: Tools from git
    block:
      - name: Tools from git block
        git:
          dest: "{{ ansible_env.HOME }}/opt/{{ item.name }}"
          depth: 1
          repo: "{{ item.repo }}"
          clone: yes
          update: yes
          accept_hostkey: yes
        loop:
          - name: "arsenic"
            repo: "https://github.com/analog-substance/arsenic.git"
          - name: "redteam-tips"
            repo: "https://github.com/defektive/redteam-tips.git"
          # - name: "SecLists"
          #   repo: "https://github.com/danielmiessler/SecLists.git"
          - name: "exploitdb"
            repo: "https://gitlab.com/exploit-database/exploitdb.git"
          - name: "NetExec"
            repo: "https://github.com/Pennyw0rth/NetExec.git"

  - name: Run Post Checkout Installs
    block:
      - name: Arsenic install
        command: /usr/local/go/bin/go install
        args:
          chdir: "{{ ansible_env.HOME }}/opt/arsenic/"
          creates: "{{ ansible_env.HOME }}/opt/go/bin/arsenic"

  - name: Go Install Tools
    command: /usr/local/go/bin/go install "{{ item }}"
    loop:
      - "github.com/analog-substance/nex@latest"
      - "github.com/analog-substance/as-gold@latest"
      - "github.com/analog-substance/copper/cmd/copper@latest"
      - "github.com/defektive/fast-resolv@latest"
      - "github.com/OJ/gobuster/v3@latest"
      - "github.com/ffuf/ffuf@latest"
      - "github.com/hakluke/hakrawler@latest"
      - "github.com/hakluke/hakcheckurl@latest"
      - "github.com/projectdiscovery/nuclei/v3/cmd/nuclei@latest"
      - "github.com/projectdiscovery/httpx/cmd/httpx@latest"
      - "github.com/projectdiscovery/dnsx/cmd/dnsx@latest"
      - "github.com/projectdiscovery/katana/cmd/katana@latest"
      - "github.com/projectdiscovery/subfinder/v2/cmd/subfinder@latest"
      - "github.com/sensepost/gowitness@latest"


  - name: Amass Get Latest Release
    shell: curl -s https://api.github.com/repos/owasp-amass/amass/releases | jq -r '.[0].assets[] | select((.name | ascii_downcase | contains("linux_amd64")) and (.content_type == "application/zip")) | .browser_download_url'
    register: amass_release

  - name: Amass Download
    unarchive:
      src: "{{ amass_release.stdout }}"
      remote_src: yes
      creates: /tmp/amass_Linux_amd64/amass
      dest: "/tmp"

  - name: Amass Install
    become: true
    copy:
      src: /tmp/amass_Linux_amd64/amass
      dest: /usr/local/bin
      mode: preserve
      remote_src: yes

  - name: Amass Cleanup
    file:
      path: /tmp/amass_Linux_amd64
      state: absent

  - name: AWS CLI Download
    unarchive:
      src: https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip
      remote_src: yes
      dest: "/tmp"

  - name: AWS CLI Install
    become: yes
    command: "/tmp/aws/install"

  - name: AWS CLI Install Cleanup
    file:
      path: "/tmp/aws"
      state: absent


  - name: Hugo Get Latest Release
    shell: curl -s https://api.github.com/repos/gohugoio/hugo/releases | jq -r '.[0].assets[] | select((.name | ascii_downcase | (contains("amd64") and contains("linux") and contains("extended") and contains(".deb")) )) | .browser_download_url'
    register: hugo_release

  - name: Hugo Install
    become: true
    apt:
      deb: "{{ hugo_release.stdout }}"
      state: present
